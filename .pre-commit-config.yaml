minimum_pre_commit_version: 2.15.0
exclude: ^LICENSES/
# reserve "manual" for relatively slow hooks which we still want to run in CI
default_stages: [
    commit,
    merge-commit,
    push,
    prepare-commit-msg,
    commit-msg,
    post-checkout,
    post-commit,
    post-merge,
    post-rewrite
]
ci:
    autofix_prs: false
repos:
-   repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.0.215
    hooks:
    -   id: ruff
        args: [--fix]
-   repo: https://github.com/jendrikseipp/vulture
    rev: 'v2.6'
    hooks:
      - id: vulture
        entry: python scripts/run_vulture.py
        pass_filenames: true
        require_serial: false
-   repo: https://github.com/codespell-project/codespell
    rev: v2.2.2
    hooks:
    -   id: codespell
        types_or: [python, rst, markdown]
        additional_dependencies: [tomli]
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: debug-statements
    -   id: end-of-file-fixer
        exclude: \.txt$
        stages: [commit, merge-commit, push, prepare-commit-msg, commit-msg,
                 post-checkout, post-commit, post-merge, post-rewrite]
    -   id: trailing-whitespace
        stages: [commit, merge-commit, push, prepare-commit-msg, commit-msg,
                 post-checkout, post-commit, post-merge, post-rewrite]
-   repo: https://github.com/pycqa/pylint
    rev: v2.15.9
    hooks:
    -   id: pylint
        stages: [manual]
-   repo: https://github.com/pycqa/pylint
    rev: v2.15.9
    hooks:
    -   id: pylint
        alias: redefined-outer-name
        name: Redefining name from outer scope
        files: ^asv_watcher/
        args: [--disable=all, --enable=redefined-outer-name]
        stages: [manual]
-   repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
    -   id: isort
-   repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
    -   id: pyupgrade
        args: [--py38-plus]
-   repo: https://github.com/sphinx-contrib/sphinx-lint
    rev: v0.6.7
    hooks:
    - id: sphinx-lint
-   repo: local
    hooks:
    # NOTE: we make `black` a local hook because if it's installed from
    # PyPI (rather than from source) then it'll run twice as fast thanks to mypyc
    -   id: black
        name: black
        description: "Black: The uncompromising Python code formatter"
        entry: black
        language: python
        require_serial: true
        types_or: [python, pyi]
    -   id: pyright
        # note: assumes python env is setup and activated
        name: pyright
        entry: pyright
        language: node
        pass_filenames: false
        types: [python]
        stages: [manual]
        additional_dependencies: &pyright_dependencies
        - pyright@1.1.276
    -   id: pyright_reportGeneralTypeIssues
        # note: assumes python env is setup and activated
        name: pyright reportGeneralTypeIssues
        entry: pyright --skipunannotated -p pyright_reportGeneralTypeIssues.json
        language: node
        pass_filenames: false
        types: [python]
        stages: [manual]
        additional_dependencies: *pyright_dependencies
    -   id: mypy
        # note: assumes python env is setup and activated
        name: mypy
        entry: mypy
        language: system
        pass_filenames: false
        types: [python]
        stages: [manual]
    -   id: flake8-rst
        name: flake8-rst
        description: Run flake8 on code snippets in docstrings or RST files
        language: python
        entry: flake8-rst
        types: [rst]
        args: [--filename=*.rst]
        additional_dependencies: [flake8-rst==0.7.0, flake8==3.7.9]
    -   id: flake8-pyi
        name: flake8-pyi
        entry: flake8 --extend-ignore=E301,E302,E305,E701,E704
        types: [pyi]
        language: python
        additional_dependencies:
        - flake8==5.0.4
        - flake8-pyi==22.8.1
    -   id: future-annotations
        name: import annotations from __future__
        entry: 'from __future__ import annotations'
        language: pygrep
        args: [--negate]
        files: ^asv_watcher/
        types: [python]
